#!cubit
reset
create brick x 6 y 6 z 0.1
curve 9  size 1
curve 9  scheme equal
vol 1 size 0.1
mesh vol 1

create vertex 1 1 1
create vertex 0.5 1 1
create vertex 0.5 0.5 1
create vertex 0 0.5 1
create vertex 0 0 1
create vertex -0.5 0 1
create vertex -0.5 -0.5 1
create vertex -1 -0.5 1
create curve spline location vertex all with is_free delete

curve 13 size 0.08
mesh curve 13

create curve helix zaxis location -2.5 0 0 thread_distance 1 angle 400 left_handed

curve 14 size 0.1
mesh curve 14

block 1 add vol 1

#material
create material "steel" property_group "CalculiX-FEA"
modify material "steel" scalar_properties "CCX_ELASTIC_USE_CARD" 1
modify material "steel" scalar_properties "CCX_ELASTIC_ISO_USE_CARD" 1
modify material "steel" matrix_property "CCX_ELASTIC_ISO_MODULUS_VS_POISSON_VS_TEMPERATURE" 210000 0.3 0 
modify material "steel" scalar_properties "CCX_PLASTIC_ISO_USE_CARD" 1
modify material "steel" scalar_properties "CCX_DENSITY_USE_CARD" 1
modify material "steel" matrix_property "CCX_DENSITY_DENSITY" 7.9e-06 0 
modify material "steel" scalar_properties "CCX_SPECIFIC_HEAT_USE_CARD" 1
modify material "steel" matrix_property "CCX_SPECIFIC_HEAT_SPECIFIC_HEAT" 5e+08 0 
modify material "steel" scalar_properties "CCX_EXPANSION_USE_CARD" 1
modify material "steel" scalar_properties "CCX_EXPANSION_ISO_USE_CARD" 1
modify material "steel" matrix_property "CCX_EXPANSION_ISO_A_TEMPERATURE" 1.2e-05 0 
modify material "steel" scalar_properties "CCX_CONDUCTIVITY_USE_CARD" 1
modify material "steel" scalar_properties "CCX_CONDUCTIVITY_ISO_USE_CARD" 1
modify material "steel" matrix_property "CCX_CONDUCTIVITY_ISO_K_TEMPERATURE" 50 0 

#sections
ccx create section solid block all material 1

#loads
ccx create trajectory heatflux curve 13 vertex 16 surface 1 direction 0 0 -1 magnitude 50 30 10 time_begin 0 time_end 10 radius 0.05 0.1 0.2
ccx create trajectory heatflux curve 14 vertex 18 surface 1 direction 0 0 -1 magnitude 50 30 10 time_begin 0 time_end 10 radius 0.1 0.2 0.3

# refinement with the use of the python interface
#!python
import numpy
face_ids = ccx.loadstrajectory_get_draw_face_ids(1)
all_face_ids=[]
for node in face_ids:
 for radius in node:
  for face in radius:
   all_face_ids.append(face)

all_face_ids=list(numpy.unique(all_face_ids))

if len(all_face_ids)>0:
 status=cubit.cmd(f"refine hex all in face {' '.join(str(id) for id in all_face_ids)} numsplit 1 bias 1.0 depth 0")
print(f"refinement {status}")

face_ids = ccx.loadstrajectory_get_draw_face_ids(2)
all_face_ids=[]
for node in face_ids:
 for radius in node:
  for face in radius:
   all_face_ids.append(face)

all_face_ids=list(numpy.unique(all_face_ids))

if len(all_face_ids)>0:
 status=cubit.cmd(f"refine hex all in face {' '.join(str(id) for id in all_face_ids)} numsplit 1 bias 1.0 depth 0")
print(f"refinement {status}")
#!cubit


#boundary conditions
create temperature on vol 1 value 293 #will be used as initial condition

#initial conditions
ccx create initialcondition temperature
ccx modify initialcondition 1 temperature bc_id 1

#outputs
ccx create fieldoutput name "fo_node" node
ccx modify fieldoutput 1 node
ccx modify fieldoutput 1 node key_on NT
ccx modify fieldoutput 1 node key_off CP DEPF DEPT DTF HCRI KEQ MACH MAXU MF PNT POT PRF PS PSF PT PTF PU RF RFL SEN TS TSF TT TTF TURB V VF U
ccx create fieldoutput name "fo_element" element
ccx modify fieldoutput 2 element
ccx modify fieldoutput 2 element key_on HFL
ccx modify fieldoutput 2 element key_off CEEQ ECD EMFB EMFE ENER ERR HER HFLF MAXE MAXS ME PEEQ PHS SF SMID SNEG SPOS SVF SDV THE ZZS E S 

# add homogeneous bc
ccx hbc add bc displacement 1

# create step
ccx create step name "heattransfer" heattransfer
ccx modify step 1 parameter inc 100000
ccx modify step 1 heattransfer  totaltimeatstart 0 initialtimeincrement 1e-1 timeperiodofstep 10 minimumtimeincrement 1e-5 maximumtimeincrement 1e-1
ccx step 1 add load trajectory 1 2
ccx step 1 add fieldoutput 1 2

#job
ccx create job name "moving_heatsource"

#ccx run job 1

ccx draw load trajectory 1 2 3



